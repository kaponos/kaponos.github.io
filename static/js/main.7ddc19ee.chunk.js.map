{"version":3,"sources":["api/fetchTransactions.js","App.js","index.js"],"names":["fetchTransactions","url","accountId","accountType","a","console","log","fetch","res","json","data","JSON","stringify","App","useState","query","setQuery","result","setResult","showConfig","setShowConfig","setUrl","search","e","key","className","style","width","height","fontSize","float","background","color","onClick","type","value","onChange","urlChanged","target","placeholder","onKeyPress","backgroundColor","striped","keyField","parse","columns","dataField","text","ReactDOM","render","document","getElementById"],"mappings":"sLAiBaA,G,MAAiB,uCAAG,WAAOC,EAAKC,EAAWC,GAAvB,iBAAAC,EAAA,6DAC7BC,QAAQC,IAAIL,GACZI,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GAHiB,SAIXI,MAAM,GAAD,OAAIN,EAAJ,sBAAqBC,EAArB,wBAA8CC,IAJxC,cAIvBK,EAJuB,gBAKVA,EAAIC,OALM,cAKvBC,EALuB,OAO7BL,QAAQC,IAAI,SAAWK,KAAKC,UAAUF,IAPT,kBAQtBA,GARsB,4CAAH,2D,+BCiGfG,EA3GH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,gCAGcA,mBAAS,KAHvB,mBAGPG,EAHO,KAGCC,EAHD,OAIsBJ,oBAAS,GAJ/B,mBAIPK,EAJO,KAIKC,EAJL,OAKQN,mBAAS,IALjB,mBAKPb,EALO,KAKFoB,EALE,KAORC,EAAM,uCAAG,WAAOC,GAAP,eAAAnB,EAAA,yDACE,UAAVmB,EAAEC,IADM,gCAEYxB,EAAkBC,EAAKc,EAAO,WAF1C,OAEDL,EAFC,OAIPL,QAAQC,IAAI,SAAWL,GACvBiB,EAAUR,GALH,2CAAH,sDAmDZ,OACI,yBAAKe,UAAU,kBACX,yBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAASC,SAAU,KACvD,yBAAKH,MAAO,CAACI,MAAM,UACf,4BAAQJ,MAAO,CAACK,WAAY,UAAYC,MAAO,QAASH,SAAU,IAAMI,QAdnE,WACbb,GAAeD,IAasFM,UAAU,OAAON,EAAc,KAAQA,GAAc,KACjJA,GACG,2BAAOe,KAAK,OAAOR,MAAO,CAACC,MAAO,SAAUQ,MAAOlC,EAAKmC,SAAU,SAACb,GAAD,OAX/D,SAACtB,GAChBoB,EAAOpB,GACPI,QAAQC,IAAIL,GASyEoC,CAAWd,EAAEe,OAAOH,YAKrG,yBAAKT,MAAO,CAACE,OAAQ,QAASC,SAAU,KAEpC,gFAMJ,2BAAOK,KAAK,OAAMT,UAAU,SAAQc,YAAY,YAAWJ,MAAOpB,EAAMqB,SAAU,SAACb,GAAD,OAAOP,EAASO,EAAEe,OAAOH,QAAOK,WAAYlB,IAC7HL,GACG,6BAaI,yBAAKS,MAAO,CAACG,SAAU,GAAIY,gBAAiB,SAE5C,kBAAC,IAAD,CAAgBC,SAAS,EAAMC,SAAS,KAAKjC,KAAMC,KAAKiC,MAAMjC,KAAKC,UAAUK,IAAU4B,QAzErF,CACd,CACIC,UAAW,gBACXC,KAAM,iBACL,CACLD,UAAW,OACXC,KAAM,QACL,CACDD,UAAW,SACXC,KAAM,UACL,CACDD,UAAW,OACXC,KAAM,QACL,CACDD,UAAW,OACXC,KAAM,QACL,CACDD,UAAW,UACXC,KAAM,WACL,CACDD,UAAW,UACXC,KAAM,WACL,CACDD,UAAW,YACXC,KAAM,oBC/CdC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7ddc19ee.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\n\n// export const fetchWeather = async (query) => {\n//     const { data } = await axios.get(URL, {\n//         params: {\n//             q: query,\n//             units: 'metric',\n//             APPID: API_KEY,\n//         }\n//     });\n\n//     return data;\n// }\n\nexport const fetchTransactions = async (url, accountId, accountType) => {\n    console.log(url)\n    console.log(accountId);\n    console.log(accountType);\n    const res = await fetch(`${url}?accountId=${accountId}&accountType=${accountType}`)\n    const data = await res.json()\n\n    console.log(\"Got2: \" + JSON.stringify(data))\n    return data;\n}","import React, { useState } from 'react';\n\nimport { fetchTransactions, fetchWeather } from './api/fetchTransactions';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; \nimport BootstrapTable from 'react-bootstrap-table-next';\n\nconst App = () => {\n    const [query, setQuery] = useState('');\n    const [weather, setWeather] = useState({});\n    const [result, setResult] = useState('');\n    const [showConfig, setShowConfig] = useState(false);\n    const [url, setUrl] = useState('');\n    \n    const search = async (e) => {\n        if(e.key === 'Enter') {\n            const data = await fetchTransactions(url, query, 'MONTHLY')\n            // const data = await fetchWeather(query);\n            console.log(\"url is\" + url)\n            setResult(data);\n            // setQuery('');\n        }\n    }\n    // const data = [\n    //     {id: 1, name: 'Gob', value: '2'},\n    //     {id: 2, name: 'Buster', value: '5'},\n    //     {id: 3, name: 'George Michael', value: '4'}\n    //   ];\n      const columns = [\n        {\n            dataField: 'transactionId',\n            text: 'TransactionId'\n          }, {\n        dataField: 'date',\n        text: 'Date'\n      }, {\n        dataField: 'amount',\n        text: 'Amount'\n      }, {\n        dataField: 'type',\n        text: 'Type'\n      }, {\n        dataField: 'bank',\n        text: 'Bank'\n      }, {\n        dataField: 'balance',\n        text: 'Balance'\n      }, {\n        dataField: 'ksymbol',\n        text: 'Ksymbol'\n      }, {\n        dataField: 'operation',\n        text: 'Operation'\n      }];\n\n    const onConfig = () => {\n        setShowConfig(!showConfig)\n\n    } \n\n    const urlChanged = (url) => {\n        setUrl(url)\n        console.log(url)\n    }\n\n    return (\n        <div className=\"main-container\">\n            <div style={{width: \"100%\", height: \"100px\", fontSize: 20}}>\n            <div style={{float:'right'}}>\n                <button style={{background: \"#012ba7\",  color: \"white\", fontSize: 10}}  onClick = {onConfig} className='btn'>{showConfig && \">\" || !showConfig && \"<\" }</button>\n                {showConfig && (\n                    <input type=\"text\" style={{width: \"700px\"}} value={url} onChange={(e) => urlChanged(e.target.value)}></input>\n                )}\n                </div>\n            </div>\n\n            <div style={{height: \"100px\", fontSize: 20}}>\n\n                <p1>MyBank - Monthly Transactions By Institution   </p1>\n\n\n            </div>\n                \n\n            <input type=\"text\"className=\"search\"placeholder=\"AccountId\"value={query}onChange={(e) => setQuery(e.target.value)}onKeyPress={search}/>\n            {result && (\n                <div>\n                    {/* <h2 className=\"city-name\">\n                        <span>{weather.name}</span>\n                        <sup>{weather.sys.country}</sup>\n                    </h2>\n                    <div className=\"city-temp\">\n                        {Math.round(weather.main.temp)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className=\"info\">\n                        <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n                        <p>{weather.weather[0].description}</p>\n                    </div> */}\n                    <div style={{fontSize: 10, backgroundColor: \"grey\"}}>\n                    \n                    <BootstrapTable striped={true} keyField='id' data={JSON.parse(JSON.stringify(result))} columns={ columns } />\n             \n        </div>\n                </div>\n                \n            )}\n\n        </div>\n\n  \n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}